<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:SS14.Launcher.ViewModels;assembly=SS14.Launcher"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mainWindowTabs="clr-namespace:SS14.Launcher.ViewModels.MainWindowTabs"
        xmlns:v="clr-namespace:SS14.Launcher.Views"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        MinWidth="800" MinHeight="500"
        Width="650" Height="400"
        x:Class="SS14.Launcher.Views.MainWindow"
        Icon="{DynamicResource WindowIcon}"
        Title="Space Station 14 Launcher"
        DragDrop.AllowDrop="True">

  <Design.DataContext>
    <vm:MainWindowViewModel />
  </Design.DataContext>

  <Panel>
    <DockPanel LastChildFill="true">
      <!-- Header -->
      <Panel DockPanel.Dock="Top" >
        <Panel.Background>
          <SolidColorBrush Color="#212126" />
        </Panel.Background>

        <!-- Note: that top margin gets disabled from C# on Windows 11 due to the colored title bar. -->
        <DockPanel Name="HeaderPanel" Margin="4, 8, 0, 0">
          <!-- Logo -->
          <Image DockPanel.Dock="Left" HorizontalAlignment="Left" Height="60" Margin="0, 0, 0, 8"
                 Source="{DynamicResource LogoLong}" />
          <!--<v:Logo DockPanel.Dock="Left" Height="60" HorizontalAlignment="Left" Margin="0, 8"></v:Logo>-->
          <Grid DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Center"
                ColumnDefinitions="Auto, Auto" RowDefinitions="Auto, Auto" Margin="0, 0, 3, 0">
            <!-- Discord link -->
            <Button Grid.Row="0" Grid.Column="0" MinWidth="90"
                    Command="{Binding OnDiscordButtonPressed}" Classes="OpenBoth"
                    Margin="0, 6, 2, 2">
              <v:IconLabel Icon="{DynamicResource InfoIcon-discord}" Content="Discord" />
            </Button>

            <!-- Website link -->
            <Button Grid.Row="0" Grid.Column="1" MinWidth="90"
                    Command="{Binding OnWebsiteButtonPressed}" Classes="OpenLeft"
                    Margin="0, 6, 0, 2">
              <v:IconLabel Icon="{DynamicResource InfoIcon-web}" Content="Website" />
            </Button>

            <!-- Account drop down -->
            <v:AccountDropDown Grid.ColumnSpan="2" Grid.Row="1"
                               IsEnabled="{Binding $parent.DataContext.AccountDropDownVisible}"
                               DataContext="{Binding AccountDropDown}" />
          </Grid>
        </DockPanel>
      </Panel>
      <Panel DockPanel.Dock="Top" Classes="GoldLineHorizontal" />
      <Grid>
        <!-- Main tabbed layout when logged in -->
        <TabControl IsVisible="{Binding LoggedIn}" ItemsSource="{Binding Tabs}" TabStripPlacement="Bottom"
                    SelectedIndex="{Binding SelectedIndex,Mode=TwoWay}" Margin="0 4 0 0">
          <TabControl.ItemTemplate>
            <DataTemplate DataType="mainWindowTabs:MainWindowTabViewModel">
              <TextBlock Text="{Binding Name}" />
            </DataTemplate>
          </TabControl.ItemTemplate>
        </TabControl>
        <!-- Login interface when not logged in -->
        <v:MainWindowLogin
          IsVisible="{Binding !$parent.DataContext.LoggedIn}"
          DataContext="{Binding LoginViewModel}" />
      </Grid>
    </DockPanel>

    <ContentControl Classes="OverlayBox"
                    IsVisible="{Binding LoginViewModel.Screen.OverlayControl, Converter={x:Static ObjectConverters.IsNotNull}}">
      <ContentControl Content="{Binding LoginViewModel.Screen.OverlayControl}" />
    </ContentControl>

    <ContentControl Classes="OverlayBox" IsVisible="{Binding LoginViewModel.Screen.Busy}">
      <StackPanel Orientation="Vertical" VerticalAlignment="Center">
        <Viewbox Width="72" Height="72" HorizontalAlignment="Center">
          <v:DungSpinner DockPanel.Dock="Top" />
        </Viewbox>
        <TextBlock Text="{Binding LoginViewModel.Screen.BusyText}" HorizontalAlignment="Center" />
      </StackPanel>
    </ContentControl>

    <ContentControl Classes="OverlayBox"
                    IsVisible="{Binding OverlayViewModel, Converter={x:Static ObjectConverters.IsNotNull}}">
      <ContentControl Content="{Binding OverlayViewModel}" />
    </ContentControl>

    <ContentControl Classes="OverlayBox" IsVisible="{Binding BusyTask,Converter={x:Static ObjectConverters.IsNotNull}}">
      <StackPanel Orientation="Vertical">
        <Viewbox Width="72" Height="72" HorizontalAlignment="Center">
          <v:DungSpinner DockPanel.Dock="Top" />
        </Viewbox>
        <TextBlock Text="{Binding BusyTask}" HorizontalAlignment="Center" />
      </StackPanel>
    </ContentControl>

    <ContentControl Classes="OverlayBox" IsVisible="{Binding OutOfDate}">
      <StackPanel Orientation="Vertical">
        <TextBlock HorizontalAlignment="Center" Classes="NanoHeadingMedium" Text="Launcher out of date" />
        <TextBlock Margin="0, 10" TextAlignment="Center"
                   Text="This launcher is out of date.&#x0a;Please download a new version from our website." />
        <DockPanel LastChildFill="False">
          <Button DockPanel.Dock="Right" Content="Exit" Command="{Binding ExitPressed}" />
          <Button DockPanel.Dock="Left" Content="Download (manual)" Command="{Binding DownloadPressed}" />
        </DockPanel>
      </StackPanel>
    </ContentControl>

    <!-- Yes I realize the absurdity of having literally 5 of these error overlay controls defined get off my back. -->

    <ContentControl Classes="OverlayBox" IsVisible="{Binding !HasDismissedEarlyAccessWarning.Value}">
      <StackPanel Orientation="Vertical">
        <TextBlock HorizontalAlignment="Center" Classes="NanoHeadingMedium" Text="Heads up!" />
        <TextBlock Margin="0, 10" TextAlignment="Center" MaxWidth="450" TextWrapping="Wrap"
                   Text="Space Station 14 is still very much in alpha. We hope you like what you see, and maybe even stick around, but make sure to keep your expectations modest for the time being." />
        <Button Content="Got it!" Command="{Binding DismissEarlyAccessPressed}" HorizontalAlignment="Center" />
      </StackPanel>
    </ContentControl>

    <!--
    Literally just keep piling them on it doesn't matter.
    This is way easier than coming up with some horribly over-engineered solution.
    -->

    <v:ConnectingOverlay DataContext="{Binding ConnectingVM}"
                         IsVisible="{Binding $parent.DataContext.ConnectingVM, Converter={x:Static ObjectConverters.IsNotNull}}" />

    <v:AngleBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

    <ContentControl Classes="OverlayBox" Name="DragDropOverlay" IsVisible="False">
      <TextBlock Text="Drop to run game" />
    </ContentControl>
  </Panel>
</Window>
